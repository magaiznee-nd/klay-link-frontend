/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC1155Mock,
  ERC1155MockInterface,
} from "../../../contracts/test/ERC1155Mock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c8162000033565b50620001b6565b6002620000418282620000ea565b5050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200007057607f821691505b6020821081036200009157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000e557600081815260208120601f850160051c81016020861015620000c05750805b601f850160051c820191505b81811015620000e157828155600101620000cc565b5050505b505050565b81516001600160401b0381111562000106576200010662000045565b6200011e816200011784546200005b565b8462000097565b602080601f8311600181146200015657600084156200013d5750858301515b600019600386901b1c1916600185901b178555620000e1565b600085815260208120601f198616915b82811015620001875788860151825594840194600190910190840162000166565b5085821015620001a65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611cdf80620001c66000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063a22cb46511610066578063a22cb465146101bd578063e985e9c5146101d0578063f242432a1461020c578063f5298aca1461021f57600080fd5b80634e1273f4146101775780636b20c45414610197578063731133e9146101aa57600080fd5b8062fdd58e146100d357806301ffc9a7146100f957806302fe53051461011c5780630e89341c146101315780631f7fdffa146101515780632eb2c2d614610164575b600080fd5b6100e66100e136600461109e565b610232565b6040519081526020015b60405180910390f35b61010c6101073660046110de565b6102c8565b60405190151581526020016100f0565b61012f61012a3660046111a1565b61031a565b005b61014461013f3660046111f1565b610326565b6040516100f09190611257565b61012f61015f36600461131e565b6103ba565b61012f6101723660046113b6565b6103cc565b61018a61018536600461145f565b610418565b6040516100f09190611564565b61012f6101a5366004611577565b610541565b61012f6101b83660046115ea565b610551565b61012f6101cb36600461163e565b61055d565b61010c6101de36600461167a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61012f61021a3660046116ad565b61056c565b61012f61022d366004611711565b6105b1565b60006001600160a01b0383166102a25760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102f957506001600160e01b031982166303a24d0760e21b145b8061031457506301ffc9a760e01b6001600160e01b03198316145b92915050565b610323816105bc565b50565b60606002805461033590611744565b80601f016020809104026020016040519081016040528092919081815260200182805461036190611744565b80156103ae5780601f10610383576101008083540402835291602001916103ae565b820191906000526020600020905b81548152906001019060200180831161039157829003601f168201915b50505050509050919050565b6103c6848484846105c8565b50505050565b6001600160a01b0385163314806103e857506103e885336101de565b6104045760405162461bcd60e51b81526004016102999061177e565b6104118585858585610713565b5050505050565b6060815183511461047d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610299565b600083516001600160401b0381111561049857610498611102565b6040519080825280602002602001820160405280156104c1578160200160208202803683370190505b50905060005b84518110156105395761050c8582815181106104e5576104e56117cd565b60200260200101518583815181106104ff576104ff6117cd565b6020026020010151610232565b82828151811061051e5761051e6117cd565b6020908102919091010152610532816117f9565b90506104c7565b509392505050565b61054c8383836108af565b505050565b6103c684848484610a39565b610568338383610b13565b5050565b6001600160a01b038516331480610588575061058885336101de565b6105a45760405162461bcd60e51b81526004016102999061177e565b6104118585858585610bf3565b61054c838383610d1d565b60026105688282611858565b6001600160a01b0384166105ee5760405162461bcd60e51b815260040161029990611917565b815183511461060f5760405162461bcd60e51b815260040161029990611958565b3360005b84518110156106ab5783818151811061062e5761062e6117cd565b602002602001015160008087848151811061064b5761064b6117cd565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082825461069391906119a0565b909155508190506106a3816117f9565b915050610613565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516106fc9291906119b8565b60405180910390a461041181600087878787610e21565b81518351146107345760405162461bcd60e51b815260040161029990611958565b6001600160a01b03841661075a5760405162461bcd60e51b8152600401610299906119e6565b3360005b845181101561084157600085828151811061077b5761077b6117cd565b602002602001015190506000858381518110610799576107996117cd565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156107e95760405162461bcd60e51b815260040161029990611a2b565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906108269084906119a0565b925050819055505050508061083a906117f9565b905061075e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108919291906119b8565b60405180910390a46108a7818787878787610e21565b505050505050565b6001600160a01b0383166108d55760405162461bcd60e51b815260040161029990611a75565b80518251146108f65760405162461bcd60e51b815260040161029990611958565b604080516020810190915260009081905233905b83518110156109cc576000848281518110610927576109276117cd565b602002602001015190506000848381518110610945576109456117cd565b602090810291909101810151600084815280835260408082206001600160a01b038c1683529093529190912054909150818110156109955760405162461bcd60e51b815260040161029990611ab8565b6000928352602083815260408085206001600160a01b038b16865290915290922091039055806109c4816117f9565b91505061090a565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610a1d9291906119b8565b60405180910390a46040805160208101909152600090526103c6565b6001600160a01b038416610a5f5760405162461bcd60e51b815260040161029990611917565b336000610a6b85610f7c565b90506000610a7885610f7c565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610aaa9084906119a0565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610b0a83600089898989610fc7565b50505050505050565b816001600160a01b0316836001600160a01b031603610b865760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610299565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610c195760405162461bcd60e51b8152600401610299906119e6565b336000610c2585610f7c565b90506000610c3285610f7c565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610c755760405162461bcd60e51b815260040161029990611a2b565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610cb29084906119a0565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610d12848a8a8a8a8a610fc7565b505050505050505050565b6001600160a01b038316610d435760405162461bcd60e51b815260040161029990611a75565b336000610d4f84610f7c565b90506000610d5c84610f7c565b60408051602080820183526000918290528882528181528282206001600160a01b038b1683529052205490915084811015610da95760405162461bcd60e51b815260040161029990611ab8565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610b0a565b6001600160a01b0384163b156108a75760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610e659089908990889088908890600401611afc565b6020604051808303816000875af1925050508015610ea0575060408051601f3d908101601f19168201909252610e9d91810190611b5a565b60015b610f4c57610eac611b77565b806308c379a003610ee55750610ec0611b93565b80610ecb5750610ee7565b8060405162461bcd60e51b81526004016102999190611257565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610299565b6001600160e01b0319811663bc197c8160e01b14610b0a5760405162461bcd60e51b815260040161029990611c1c565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610fb657610fb66117cd565b602090810291909101015292915050565b6001600160a01b0384163b156108a75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061100b9089908990889088908890600401611c64565b6020604051808303816000875af1925050508015611046575060408051601f3d908101601f1916820190925261104391810190611b5a565b60015b61105257610eac611b77565b6001600160e01b0319811663f23a6e6160e01b14610b0a5760405162461bcd60e51b815260040161029990611c1c565b80356001600160a01b038116811461109957600080fd5b919050565b600080604083850312156110b157600080fd5b6110ba83611082565b946020939093013593505050565b6001600160e01b03198116811461032357600080fd5b6000602082840312156110f057600080fd5b81356110fb816110c8565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b038111828210171561113d5761113d611102565b6040525050565b60006001600160401b0383111561115d5761115d611102565b604051611174601f8501601f191660200182611118565b80915083815284848401111561118957600080fd5b83836020830137600060208583010152509392505050565b6000602082840312156111b357600080fd5b81356001600160401b038111156111c957600080fd5b8201601f810184136111da57600080fd5b6111e984823560208401611144565b949350505050565b60006020828403121561120357600080fd5b5035919050565b6000815180845260005b8181101561123057602081850181015186830182015201611214565b81811115611242576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006110fb602083018461120a565b60006001600160401b0382111561128357611283611102565b5060051b60200190565b600082601f83011261129e57600080fd5b813560206112ab8261126a565b6040516112b88282611118565b83815260059390931b85018201928281019150868411156112d857600080fd5b8286015b848110156112f357803583529183019183016112dc565b509695505050505050565b600082601f83011261130f57600080fd5b6110fb83833560208501611144565b6000806000806080858703121561133457600080fd5b61133d85611082565b935060208501356001600160401b038082111561135957600080fd5b6113658883890161128d565b9450604087013591508082111561137b57600080fd5b6113878883890161128d565b9350606087013591508082111561139d57600080fd5b506113aa878288016112fe565b91505092959194509250565b600080600080600060a086880312156113ce57600080fd5b6113d786611082565b94506113e560208701611082565b935060408601356001600160401b038082111561140157600080fd5b61140d89838a0161128d565b9450606088013591508082111561142357600080fd5b61142f89838a0161128d565b9350608088013591508082111561144557600080fd5b50611452888289016112fe565b9150509295509295909350565b6000806040838503121561147257600080fd5b82356001600160401b038082111561148957600080fd5b818501915085601f83011261149d57600080fd5b813560206114aa8261126a565b6040516114b78282611118565b83815260059390931b85018201928281019150898411156114d757600080fd5b948201945b838610156114fc576114ed86611082565b825294820194908201906114dc565b9650508601359250508082111561151257600080fd5b5061151f8582860161128d565b9150509250929050565b600081518084526020808501945080840160005b838110156115595781518752958201959082019060010161153d565b509495945050505050565b6020815260006110fb6020830184611529565b60008060006060848603121561158c57600080fd5b61159584611082565b925060208401356001600160401b03808211156115b157600080fd5b6115bd8783880161128d565b935060408601359150808211156115d357600080fd5b506115e08682870161128d565b9150509250925092565b6000806000806080858703121561160057600080fd5b61160985611082565b9350602085013592506040850135915060608501356001600160401b0381111561163257600080fd5b6113aa878288016112fe565b6000806040838503121561165157600080fd5b61165a83611082565b91506020830135801515811461166f57600080fd5b809150509250929050565b6000806040838503121561168d57600080fd5b61169683611082565b91506116a460208401611082565b90509250929050565b600080600080600060a086880312156116c557600080fd5b6116ce86611082565b94506116dc60208701611082565b9350604086013592506060860135915060808601356001600160401b0381111561170557600080fd5b611452888289016112fe565b60008060006060848603121561172657600080fd5b61172f84611082565b95602085013595506040909401359392505050565b600181811c9082168061175857607f821691505b60208210810361177857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161180b5761180b6117e3565b5060010190565b601f82111561054c57600081815260208120601f850160051c810160208610156118395750805b601f850160051c820191505b818110156108a757828155600101611845565b81516001600160401b0381111561187157611871611102565b6118858161187f8454611744565b84611812565b602080601f8311600181146118ba57600084156118a25750858301515b600019600386901b1c1916600185901b1785556108a7565b600085815260208120601f198616915b828110156118e9578886015182559484019460019091019084016118ca565b50858210156119075787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b600082198211156119b3576119b36117e3565b500190565b6040815260006119cb6040830185611529565b82810360208401526119dd8185611529565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611b2890830186611529565b8281036060840152611b3a8186611529565b90508281036080840152611b4e818561120a565b98975050505050505050565b600060208284031215611b6c57600080fd5b81516110fb816110c8565b600060033d1115611b905760046000803e5060005160e01c5b90565b600060443d1015611ba15790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715611bd057505050505090565b8285019150815181811115611be85750505050505090565b843d8701016020828501011115611c025750505050505090565b611c1160208286010187611118565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611c9e9083018461120a565b97965050505050505056fea2646970667358221220bde29f7f2e436edd803af23c77f11187f70aa96367f8720661e732c1b7c5475564736f6c634300080f0033";

type ERC1155MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Mock__factory extends ContractFactory {
  constructor(...args: ERC1155MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Mock> {
    return super.deploy(overrides || {}) as Promise<ERC1155Mock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Mock {
    return super.attach(address) as ERC1155Mock;
  }
  override connect(signer: Signer): ERC1155Mock__factory {
    return super.connect(signer) as ERC1155Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MockInterface {
    return new utils.Interface(_abi) as ERC1155MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Mock;
  }
}
