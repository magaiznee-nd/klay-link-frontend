/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "DiscountDBV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiscountDBV1__factory>;
    getContractFactory(
      name: "IDiscountDB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiscountDB__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IKlayLink",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKlayLink__factory>;
    getContractFactory(
      name: "IKlayLinkMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKlayLinkMinter__factory>;
    getContractFactory(
      name: "ISoulBoundToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISoulBoundToken__factory>;
    getContractFactory(
      name: "KlayLink",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KlayLink__factory>;
    getContractFactory(
      name: "KlayLinkMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KlayLinkMinter__factory>;
    getContractFactory(
      name: "SoulBoundToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SoulBoundToken__factory>;
    getContractFactory(
      name: "ERC1155Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Mock__factory>;
    getContractFactory(
      name: "ERC721Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Mock__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "DiscountDBV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiscountDBV1>;
    getContractAt(
      name: "IDiscountDB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiscountDB>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IKlayLink",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKlayLink>;
    getContractAt(
      name: "IKlayLinkMinter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKlayLinkMinter>;
    getContractAt(
      name: "ISoulBoundToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISoulBoundToken>;
    getContractAt(
      name: "KlayLink",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KlayLink>;
    getContractAt(
      name: "KlayLinkMinter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KlayLinkMinter>;
    getContractAt(
      name: "SoulBoundToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SoulBoundToken>;
    getContractAt(
      name: "ERC1155Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Mock>;
    getContractAt(
      name: "ERC721Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Mock>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
